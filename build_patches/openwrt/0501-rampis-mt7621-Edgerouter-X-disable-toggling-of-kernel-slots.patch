From 5e355f1f9084c1b6de3151fbcde948d736292d6c Mon Sep 17 00:00:00 2001
From: Tim Lunn <tim@feathertop.org>
Date: Wed, 17 Apr 2024 12:51:22 +1000
Subject: [PATCH] rampis: mt7621: Edgerouter-X disable toggling of kernel slots
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Uboot selects which kernel slot to boot based on a flag in the factory
mtd partition. Patch ubnt.sh to ensure always flash to kernel1 slot and
update flag if required.

Signed-off-by: Tim Lunn <tim@feathertop.org>
Tested-by: Mauri Sandberg <maukka@ext.kapsi.fi>
Link: https://github.com/openwrt/openwrt/pull/15194
Signed-off-by: Petr Å tetiar <ynezz@true.cz>
---
 .../mt7621/base-files/lib/upgrade/ubnt.sh     | 39 ++++---------------
 1 file changed, 7 insertions(+), 32 deletions(-)

diff --git a/target/linux/ramips/mt7621/base-files/lib/upgrade/ubnt.sh b/target/linux/ramips/mt7621/base-files/lib/upgrade/ubnt.sh
index 748ec8e6286ee6..7e9d937d79f856 100644
--- a/target/linux/ramips/mt7621/base-files/lib/upgrade/ubnt.sh
+++ b/target/linux/ramips/mt7621/base-files/lib/upgrade/ubnt.sh
@@ -8,32 +8,16 @@
 
 UBNT_ERX_KERNEL_INDEX_OFFSET=160
 
-ubnt_get_target_kernel() {
+ubnt_update_kernel_flag() {
 	local factory_mtd=$1
-	local current_kernel_index=$(hexdump -s $UBNT_ERX_KERNEL_INDEX_OFFSET -n 1 -e '/1 "%X "' ${factory_mtd})
+	local kernel_index=$(hexdump -s $UBNT_ERX_KERNEL_INDEX_OFFSET -n 1 -e '/1 "%X "' ${factory_mtd})
 
-	if [ $current_kernel_index == "0" ]; then
-		echo 'kernel2'
-	elif [ $current_kernel_index == "1" ]; then
-		echo 'kernel1'
-	fi
-}
-
-ubnt_update_target_kernel() {
-	local factory_mtd=$1
-	local kernel_part=$2
-
-	local new_kernel_index
-	if [ $kernel_part == "kernel1" ]; then
-		new_kernel_index="\x00"
-	elif [ $kernel_part == "kernel2" ]; then
-		new_kernel_index="\x01"
-	else
-		echo 'Unknown kernel image index' >&2
-		return 1
+	if [ $kernel_index = "0" ]; then
+		echo "Kernel flag already set to kernel slot 1"
+		return 0
 	fi
 
-	if ! (echo -e $new_kernel_index | dd of=${factory_mtd} bs=1 count=1 seek=$UBNT_ERX_KERNEL_INDEX_OFFSET); then
+	if ! (echo -e "\x00" | dd of=${factory_mtd} bs=1 count=1 seek=$UBNT_ERX_KERNEL_INDEX_OFFSET); then
 		echo 'Failed to update kernel bootup index' >&2
 		return 1
 	fi
@@ -46,15 +30,6 @@ platform_upgrade_ubnt_erx() {
 		exit 1
 	fi
 
-	local kernel_part="$(ubnt_get_target_kernel ${factory_mtd})"
-	if [ -z "$kernel_part" ]; then
-		echo "cannot find factory partition" >&2
-		exit 1
-	fi
-
-	# This is a global defined in nand.sh, sets partition kernel will be flashed into
-	CI_KERNPART=${kernel_part}
-
 	#Remove volume possibly left over from stock firmware
 	local ubidev="$( nand_find_ubi "$CI_UBIPART" )"
 	if [ -z "$ubidev" ]; then
@@ -72,7 +47,7 @@ platform_upgrade_ubnt_erx() {
 		[ -n "$troot_ubivol" ] && ubirmvol /dev/$ubidev -N troot || true
 	fi
 
-	ubnt_update_target_kernel ${factory_mtd} ${kernel_part} || exit 1
+	ubnt_update_kernel_flag ${factory_mtd} || exit 1
 
 	nand_do_upgrade "$1"
 }
