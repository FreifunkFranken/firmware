# SPDX-License-Identifier: GPL-3.0-only

babel_get_version() {
	/usr/sbin/bird --version 2>&1 | sed "s/BIRD version /bird-/"
}

babel_add_interface() {
	[ "$#" -gt "5" ] && return 1

	local name="${1:?Missing parameter: name}"
	local interface="${2:?Missing parameter: interface}"
	local type="${3:?Missing parameter: type}"
	local rxcost="${4:?Missing parameter: rxcost}"
	local limit="${5:-12}"

	[ "$limit" -lt 1 ] || [ "$limit" -gt "16" ] && { echo "babelpeer limit option must be in range 1-16"; return 1; }

	mkdir -p /tmp/bird/fff/babelpeers
	echo "interface \"$interface\" { type $type; rxcost $rxcost; limit $limit; };" > /tmp/bird/fff/babelpeers/$name.conf

	return 0
}

babel_delete_interface() {
	[ "$#" -ne "1" ] && return 1

	local name="$1"

	# Removing peers from /etc is not necessary, as all peers are generated into /tmp on every configuration run,
	# which completely overwrites existing peers in /etc in the apply step.
	rm -f /tmp/bird/fff/babelpeers/$name.conf

	return 0
}

babel_add_redistribute_filter() {
	return 0
}

babel_add_private_prefix_filter() {
	[ "$#" -ne "1" ] && return 1

	local prefix="$1"
	prefix=$(owipcalc "$prefix" network prefix "$prefix")

	mkdir -p /tmp/bird/fff
	echo "if net ~ $prefix then reject;" > /tmp/bird/fff/nat-filter.conf

	return 0
}

babel_remove_custom_redistribute_filters() {
	mkdir -p /tmp/bird/fff
	> /tmp/bird/fff/nat-filter.conf

	return 0
}

babel_apply_implementation() {
	# error output hidden because apply might be executed without a preceding configure step.
	if [ -d /tmp/bird/fff ]; then
		rm -rf /etc/bird/fff
		mv /tmp/bird/fff /etc/bird/fff
	fi

	return 0
}

babel_reload_implementation() {
	/etc/init.d/fff-bird reload
}

babel_revert() {
	rm -rf /tmp/bird/fff
}
