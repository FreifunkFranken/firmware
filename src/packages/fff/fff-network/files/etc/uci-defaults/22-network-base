#!/bin/sh
# SPDX-License-Identifier: GPL-3.0-or-later

. /lib/functions/system.sh
. /lib/functions/fff/network

BOARD="$(uci get board.model.name)"
. /etc/network.$BOARD

[ -n "$ROUTERMAC" ] || ROUTERMAC=$(get_mac_label)

# Clear possibly existing network configuration
> /etc/config/network

# Add basic network configuration
uci batch <<-__EOF__
	del network.globals
	set network.globals=globals
	set network.globals.packet_steering='-n'

	set network.loopback='interface'
	set network.loopback.ifname='lo'
	set network.loopback.proto='static'
	set network.loopback.ipaddr='127.0.0.1'
	set network.loopback.netmask='255.0.0.0'

	set network.fdff='interface'
	set network.fdff.ifname='lo'
	set network.fdff.proto='static'
	set network.fdff.ip6deprecated='1'

	set network.wan='interface'
	set network.wan.proto='none'

	set network.wan4='interface'
	set network.wan4.proto='dhcp'
	set network.wan4.ifname='@wan'

	set network.wan6='interface'
	set network.wan6.proto='dhcpv6'
	set network.wan6.reqprefix='no'
	set network.wan6.sourcefilter='0'
	set network.wan6.ifname='@wan'
__EOF__

SWITCHHW=$(swconfig list | awk '{ print $4 }')
if [ "$DSA" = "1" ]; then
	uci batch <<-__EOF__
		set network.$SWITCHDEV=device
		set network.$SWITCHDEV.name=$SWITCHDEV
		set network.$SWITCHDEV.type=bridge
		# temporary workaround for netifd bug present in OpenWrt 21.02.0 (FS#4104)
		set network.$SWITCHDEV.bridge_empty='1'
	__EOF__
elif [ -n "$SWITCHHW" ] && [ -z "$ONE_PORT" ] && [ -z "$TWO_PORT" ]; then
	uci batch <<-__EOF__
		set network.$SWITCHDEV=switch
		set network.$SWITCHDEV.name=$SWITCHHW
		set network.$SWITCHDEV.enable=1
		set network.$SWITCHDEV.reset=1
		set network.$SWITCHDEV.enable_vlan=1
	__EOF__
fi

uci -q commit network
