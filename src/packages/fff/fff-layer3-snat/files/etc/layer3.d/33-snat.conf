# load uci functions
. /lib/functions.sh
. /lib/functions/system.sh

configure() {
	add_snat() {
		local name="$1"

		if [ "$(uci -q get gateway.$name.snat)" = '1' ]; then

			# first check the config is plausible
			if ! routerip=$(uci -q get gateway.meta.router_ip); then
				echo "ERROR: No router_ip set, which is required for SNAT!"
				return 1
			fi
			if ! uci -q get gateway.$name.ipaddr >/dev/null; then
				echo "ERROR: No ipaddr set, which is required for SNAT!"
				return 1
			fi

			# keep only the first IP
			routerip=${routerip%% *}
			# keep only the IP without the CIDR
			routerip=${routerip%%/*}

			# We set the snat config
			uci set network.$name.fff_snat=1
			uci set network.$name.fff_snat_sourceip=$routerip
		fi
	}

	remove_snat() {
		local name="$1"

		uci -q del network.$name.fff_snat
		uci -q del network.$name.fff_snat_sourceip

		# TODO: only delete if fff_snat is actually gone
	}


	config_load network
	config_foreach remove_snat interface

	config_load gateway
	config_foreach add_snat client
}

apply() {
	uci commit network
}

revert() {
	uci revert network
}
