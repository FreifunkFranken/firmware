. /lib/functions.sh
. /lib/functions/fff/babel

#load board specific properties
BOARD="$(uci get board.model.name)"
. /etc/network.$BOARD

configure() {
	## babelpeer
	# remove peers missing in gateway config
	remove_babelpeer() {
		local name="$1"
		if ! echo $name | grep cfg > /dev/null; then # do not delete default interface
			if ! uci -q get gateway.$name > /dev/null; then
				# remove interface
				uci -q del network.$name
				# remove iif-rules
				babel_delete_iifrules "$name"
				# remove babel interface
				babel_delete_interface "$name"
			fi
		fi
	}

	config_load babeld
	config_foreach remove_babelpeer interface

	#add new peers
	add_babelpeer() {
		local name="$1"
		local vlan
		local type

		# prohibit cfg* as name
		if echo $name | grep cfg > /dev/null; then
			echo "ERROR: name $name is invalid for babelpeer!"
			exit 1
		fi

		# get iface
		if vlan=$(uci -q get gateway.$name.vlan); then
			iface="${SWITCHDEV}.$vlan"
		elif iface=$(uci -q get gateway.$name.iface); then
			iface="$iface"
		else
			echo "ERROR: No iface set for babelpeer $name!"
			exit 1
		fi

		# get type
		if type=$(uci -q get gateway.$name.type); then
			type="$type"
		else
			type=wired
		fi

		# get rxcost
		if rxcost=$(uci -q get gateway.$name.rxcost); then
			rxcost="$rxcost"
		else
			rxcost=96
		fi

		# add interface
		uci set network.$name=interface
		uci set network.$name.proto=static
		uci set network.$name.ifname=$iface

		# add iif-rules
		babel_add_iifrules "$name" || { echo "Could not add iif-rules for babelpeer $name"; exit 1; }

		# peer_ip
		uci -q delete "network.$name.ipaddr"
		uci -q delete "network.$name.ip6addr"
		babel_add_peeraddr "network.$name.ipaddr"
		babel_add_peer6addr "network.$name.ip6addr"

		# add babel interface
		babel_add_interface "$name" "$iface" "$type" "$rxcost" || { echo "Could not add babeld interface for babelpeer $name"; exit 1; }
	}

	config_load gateway
	config_foreach add_babelpeer babelpeer
}

apply() {
	uci commit network
	uci commit babeld
}

revert() {
	uci revert network
	uci revert babeld
}
